//Task_2

#include <iostream>
#include <stack>
using namespace std;


string removeDuplicates(string s) {
    stack<char> st; // Stack to store characters

    for (char characters : s) {
         // If top of stack is the same as current char, pop it
        if (!st.empty() && st.top() == characters) {
            st.pop(); // Remove duplicate
        } else {
            st.push(characters); // Add current character
        }
    }

     // Build the result string from the stack
    string result = "";
    while (!st.empty()) {
        result = st.top() + result; // Prepend to maintain order
        st.pop();
    }

    return result; // Return the final string
}

int main() {
    string input;

    cout << "Input: ";
    cin >> input; 

    string output = removeDuplicates(input);
    cout << "Output: " << output << endl; //Get the final output

    return 0;
}

//Time Complexity: O(n)
//Space Complexity: O(n)
